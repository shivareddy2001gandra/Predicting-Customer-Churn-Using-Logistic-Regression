import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler

def load_data(file_path):
    # Load the dataset
    return pd.read_csv(file_path)

def preprocess_data(df):
    # Handle missing values
    df = df.fillna(df.mean())
    
    # Encoding categorical variables
    df = pd.get_dummies(df, drop_first=True)
    
    # Split into features (X) and target (y)
    X = df.drop("Churn", axis=1)  # Assuming 'Churn' is the target column
    y = df["Churn"]
    
    # Split into train and test sets
    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)
    
    # Feature scaling
    scaler = StandardScaler()
    X_train = scaler.fit_transform(X_train)
    X_test = scaler.transform(X_test)
    
    return X_train, X_test, y_train, y_test
